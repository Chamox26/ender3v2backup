[include mainsail.cfg]
[exclude_object]

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[printer]
kinematics: cartesian
max_velocity: 350
max_accel: 4000
max_accel_to_decel: 4000
max_z_velocity: 5
max_z_accel: 150
square_corner_velocity: 6

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 39.93
endstop_pin: ^PA5
position_endstop: 0
position_max: 235
position_min: -15
homing_speed: 50

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 39.997
endstop_pin: ^PA6
position_endstop: 0
position_max: 235
position_min: -13
homing_speed: 50

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 7.98
endstop_pin: ^PA7
position_endstop: 0
position_max: 250
position_min: -4
homing_speed: 10
second_homing_speed: 1
homing_retract_dist: 2.0

[extruder]
max_extrude_only_distance: 100.0
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 34.54  # Verifica con TEST_EXTRUDER
gear_ratio: 50:11
nozzle_diameter: 0.600
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
#control: pid
#pid_kp: 27.524
#pid_ki: 1.240
#pid_kd: 152.760
min_temp: 0
max_temp: 245
min_extrude_temp: 120
# Ajustes de Pressure Advance

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
#pid_kp: 71.128
#pid_ki: 1.688
#pid_kd: 749.514
min_temp: 0
max_temp: 100

[fan]
pin: PA0

[skew_correction]

#[mcu]
#serial: /dev/ttyAMA0
#restart_method: command

#[adxl345]
#cs_pin: rpi:None
#axes_map: y,x,z

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
 #   125, 125, 20  # an example
    
[input_shaper]
shaper_freq_x: 107.4
shaper_type_x: mzv
shaper_freq_y: 35
shaper_type_y: zv

[shaketune]
 result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
 number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
 keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
 show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
 timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
 measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
 max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
 dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 73.452
#*# pid_ki = 1.761
#*# pid_kd = 765.732
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 28.384
#*# pid_ki = 1.333
#*# pid_kd = 151.144
#*#
#*# [stepper_z]
#*#
#*# [skew_correction my_skew_profile]
#*# xy_skew = -2.220446049250313e-16
#*# xz_skew = 0.0
#*# yz_skew = 0.0
